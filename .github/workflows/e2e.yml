name: e2e

on:
  workflow_dispatch:
  pull_request:
    types: [synchronize, opened, reopened]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/setup

      - name: Build
        run: |
          cd packages/badge-api
          pnpm exec tsc -b
          cd ../..

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: base-version
        run: echo "version=$(jq --raw-output '.version' lerna.json)" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/stryker-mutator/dashboard
          tags: |
            type=ref,event=pr,prefix=${{ steps.base-version.outputs.version }}-pr-,suffix=.{{sha}}
            type=ref,event=pr
            type=ref,event=branch

      - name: Set versions
        run: pnpm pkg set version="${{ steps.meta.outputs.version }}" --workspaces

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: 'version=${{ steps.meta.outputs.version }}'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Package badge-api
        run: pnpm --node-linker=hoisted deploy --filter='@stryker-mutator/dashboard-badge-api' --prod package

      - name: Upload badge-api package artifact
        uses: actions/upload-artifact@v5
        with:
          name: badge-api-package
          path: package

  deploy-and-test:
    name: Deploy to Acceptance and run E2E tests
    needs: build-and-release
    runs-on: ubuntu-latest
    environment:
      name: Acceptance
      url: https://stryker-dashboard-acceptance.azurewebsites.net/
    concurrency:
      group: Acceptance
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Azure login
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_IDENTITY_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_IDENTITY_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_IDENTITY_SUBSCRIPTION_ID }}

      - name: 'Deploy stryker-dashboard-acceptance.azurewebsites.net'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'stryker-dashboard-acceptance'
          images: 'ghcr.io/stryker-mutator/dashboard:${{ needs.build-and-release.outputs.version }}'

      - name: Download badge-api package artifact
        uses: actions/download-artifact@v6
        with:
          name: badge-api-package
          path: package

      - name: 'Deploy stryker-mutator-badge-api-acceptance.azurewebsites.net'
        uses: Azure/functions-action@v1
        with:
          app-name: stryker-mutator-badge-api-acceptance
          package: 'package'

      - uses: ./.github/setup
        with:
          install-chromium: 'true'

      - name: Build
        run: |
          cd packages/e2e
          pnpm exec tsc -b
          cd ../..

      - name: 'Verify deployment'
        run: |
          node tasks/check-version badge-api https://stryker-mutator-badge-api-acceptance.azurewebsites.net/api ${{ needs.build-and-release.outputs.version }}
          node tasks/check-version dashboard https://stryker-dashboard-acceptance.azurewebsites.net/api/version ${{ needs.build-and-release.outputs.version }}

      - name: Run e2e tests
        run: |
          cd packages/e2e
          pnpm test
        env:
          BASE_URL: https://stryker-dashboard-acceptance.azurewebsites.net
          E2E_AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.E2E_AZURE_STORAGE_CONNECTION_STRING }}
          E2E_JWT_SECRET: ${{ secrets.E2E_JWT_SECRET }}
          E2E_ACCESS_TOKEN: ${{ secrets.E2E_ACCESS_TOKEN }}
          E2E_BADGE_API_BASE_URL: https://stryker-mutator-badge-api-acceptance.azurewebsites.net

      - name: Upload artifacts if failed
        uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: playwright-videos
          path: |
            packages/e2e/test-results/
            packages/e2e/playwright-report/
